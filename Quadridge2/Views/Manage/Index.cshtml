@model Quadridge2.Models.IndexViewModel
@{
    ViewBag.Title = "Manage";
}

<h2>@ViewBag.Title.</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
<div>
    <h4>Change your account settings</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>Password:</dt>
        <dd>
            [
            @if (Model.HasPassword)
            {
                @Html.ActionLink("Change your password", "ChangePassword")
            }
            else
            {
                @Html.ActionLink("Create", "SetPassword")
            }
            ]
        </dd>
    </dl>
</div>

<div class="card">
  <div class="card-header">
    @Html.ActionLink("Edit", "Edit", "Contacts", new { id = Model.User.Id }, new { @class = "btn btn-primary float-right" })
    <h4>@Model.User.Fullname</h4>
  </div>
  <div class="card-body">
    <div class="form-row">
      <div class="col-3">
        <div class="form-group">
          @Html.LabelFor(c => c.User.FirstName, new { @class = "form-control-label" })
          @Html.TextBoxFor(c => c.User.FirstName, new { @class = "form-control", @readonly = "" })
          @Html.ValidationMessageFor(c => c.User.FirstName)
        </div>
      </div>

      <div class="col-3">
        <div class="form-group">
          @Html.LabelFor(c => c.User.LastName, new { @class = "form-control-label" })
          @Html.TextBoxFor(c => c.User.LastName, new { @class = "form-control", @readonly = "" })
          @Html.ValidationMessageFor(c => c.User.LastName)
        </div>
      </div>
      <div class="col-6">
        <table></table>
      </div>
    </div>

    <div class="form-row">

      <div class="col-3">
        <div class="form-group">
          @Html.LabelFor(c => c.User.Email, new { @class = "form-control-label" })
          @Html.TextBoxFor(c => c.User.Email, new { @class = "form-control", @readonly = "" })
          @Html.ValidationMessageFor(c => c.User.Email)
        </div>
      </div>
      <div class="col-3">
        @{
          string sqlFormattedDate = Model.User.Birthday.HasValue
              ? Model.User.Birthday.Value.ToString("dd-MM-yyyy")
              : "<not available>";
        }
        <div class="form-group">
          @Html.LabelFor(c => c.User.Birthday, new { @class = "form-control-label" })
          @Html.TextBoxFor(c => sqlFormattedDate, new { @class = "form-control", @readonly = "" })
        </div>
      </div>
    </div>
    <div class="form-row">
      <div class="col-3">
        <div class="form-group">
          @Html.LabelFor(c => c.User.PhoneNumber, new { @class = "form-control-label" })
          @Html.TextBoxFor(c => c.User.PhoneNumber, new { @class = "form-control", @readonly = "" })
          @Html.ValidationMessageFor(c => c.User.PhoneNumber)
        </div>
      </div>

      <div class="col-3">
        <div class="form-group">
          @Html.LabelFor(c => c.User.UserName, new { @class = "form-control-label" })
          @Html.TextBoxFor(c => c.User.UserName, new { @class = "form-control", @readonly = "" })
        </div>
      </div>
    </div>
    <hr />
  </div>
</div>
